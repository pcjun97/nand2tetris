// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;
    static int r;

    /** Initializes the library. */
    function void init() {
      var int i, j;

      let twoToThe = Array.new(16);
      let i = 0;
      let j = 1;

      while (i < 16) {
        let twoToThe[i] = j;
        let j = j + j;
        let i = i + 1;
      }

      return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      if (x < 0) {
        return -x;
      }
      return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
      var int sum, shiftedx, i;

      let sum = 0;
      let shiftedx = x;
      let i = 0;

      while (i < 16) {
        if (~((y & twoToThe[i]) = 0)) {
          let sum = sum + shiftedx;
        }
        let shiftedx = shiftedx + shiftedx;
        let i = i + 1;
      }

      return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
      var int q;

      if ((x < 0) & (y < 0)) {
        return Math.divide(Math.abs(x), Math.abs(y));
      }

      if ((x < 0) | (y < 0)) {
        return -Math.divide(Math.abs(x), Math.abs(y));
      }

      if (y > x) {
        let r = x;
        return 0;
      }

      let q = Math.divide(x, y+y);

      if (r < y) {
        return q + q;
      } else {
        let r = r - y;
        return q + q + 1;
      }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      var int y, j, val, val2;
      let y = 0;
      let j = 128;
      
      while (j > 0) {
        let val = y + j;
        let val2 = val * val;
        if ((val2 > 0) & (val2 - 1 < x)) {
          let y = val;
        }
        let j = j / 2;
      }

      return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if (a > b) {
        return a;
      }
      return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if (a < b) {
        return a;
      }
      return b;
    }
}
